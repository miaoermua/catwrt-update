name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [armv7-unknown-linux-musl, armv8-unknown-linux-musl , x86_64-unknown-linux-musl, mips-unknown-linux-musl]
        name: [armv7-musl,armv8-musl ,x86_64-musl, mips-musl]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Install cross-compilation dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev

    - name: Build release binaries
      run: cargo build --release --target=$TARGET --features=ssl --all-features

    - name: Create release artifacts
      run: |
        mkdir artifacts/$NAME
        cp target/$TARGET/release/* artifacts/$NAME/
        cd artifacts
        zip -r release-$NAME.zip $NAME/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        files: |
          artifacts/*.zip
        body: |
          Release ${{ github.ref }}
